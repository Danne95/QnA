pipeline {
    agent {
        docker {
            image 'androidsdk/android-29'
        }
    }
    stages {
        stage('Build') {
            steps {
                echo 'Running build'
                sh 'chmod +x gradlew && ./gradlew --no-daemon --stacktrace clean'
                sh 'echo no | avdmanager create avd -n first_avd --abi google_apis/x86_64 -k "system-images;android-29;google_apis;x86_64"'
                sh 'emulator -avd first_avd -no-window -no-audio &'
                sh 'adb devices'
            }
        }
        stage('Test') {
            steps {
                echo 'Running Test'
                sh '$ANDROID_SDK/tools/emulator -avd first_avd -wipe-data &;EMULATOR_PID=$!;WAIT_CMD="$ANDROID_SDK/platform-tools/adb wait-for-device shell getprop init.svc.bootanim";until $WAIT_CMD | grep -m 1 stopped; do echo "Waiting...";sleep 1;done;$ANDROID_SDK/platform-tools/adb shell input keyevent 82;$ANDROID_SDK/platform-tools/adb logcat -c;$ANDROID_SDK/platform-tools/adb logcat > build/logcat.log &;LOGCAT_PID=$!;./gradlew connectedAndroidTest -i;kill $LOGCAT_PID;kill $EMULATOR_PID'
                 }
            post {
                always {
                    echo 'Running post-test'
                }
            }
        }
        stage('Deliver') {
           steps {
                echo 'Running Deliver'
            }
        }
    }
}