pipeline {
    agent {
        docker {
            image 'androidsdk/android-29'
        }
    }
    stages {
        stage('Build') {
            steps {
                echo 'Running build'
                sh 'chmod +x gradlew && ./gradlew --no-daemon --stacktrace clean'
                sh 'echo no | avdmanager create avd -n first_avd --abi google_apis/x86_64 -k "system-images;android-29;google_apis;x86_64"'
                sh 'emulator -avd first_avd -no-window -no-audio &'
                sh 'adb devices'
            }
        }
        stage('Test') {
            steps {
                echo 'Running Test'
                sh 'ANDROID_SDK/tools/emulator -avd Nexus_5X_API_23 -wipe-data &'
                sh 'EMULATOR_PID=$!'

                # Wait for Android to finish booting
                sh 'WAIT_CMD="$ANDROID_SDK/platform-tools/adb wait-for-device shell getprop init.svc.bootanim"'
                sh 'until $WAIT_CMD | grep -m 1 stopped; do
                  echo "Waiting..."
                  sleep 1
                done'

                # Unlock the Lock Screen
                sh 'ANDROID_SDK/platform-tools/adb shell input keyevent 82'

                # Clear and capture logcat
                sh 'ANDROID_SDK/platform-tools/adb logcat -c'
                sh 'ANDROID_SDK/platform-tools/adb logcat > build/logcat.log &'
                sh 'LOGCAT_PID=$!'

                # Run the tests
                sh './gradlew connectedAndroidTest -i'

                # Stop the background processes
                sh 'kill LOGCAT_PID'
                sh 'kill EMULATOR_PID'
            }
            post {
                always {
                    echo 'Running post-test'
                }
            }
        }
        stage('Deliver') {
            steps {
                echo 'Running Deliver'
            }
        }
    }
}